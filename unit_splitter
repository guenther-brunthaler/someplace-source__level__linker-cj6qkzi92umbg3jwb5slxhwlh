#! /bin/sh
set -e
snippet_ext=.sh
seq_ext=.order
dup_ext_prefix=.dup
unit_marker='@'
out_dir=lib

cleanup() {
	rc=$?
	$fd5_is_open && exec 5>& -
	$fd6_is_open && exec 6>& -
	test "$TF" && rm -- "$TF"
	test $rc = 0 || echo "$0 failed!" >& 2
}

fd5_is_open=false
fd6_is_open=false
TF=
trap cleanup 0
trap 'exit $?' INT TERM QUIT HUP

while getopts o:M: opt
do
	case $opt in
		o) out_dir=$OPTARG;;
		M) test "$OPTARG"; unit_marker=$OPTARG;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

if test ! -d "$out_dir"
then
	echo "Output directory '$out_dir' does not exist!" >& 2
	false || exit
fi
TF=`mktemp -- ${TMPDIR:-/tmp}/${0##*/}.XXXXXXXXXX`

for cf
do
	test -f "$cf"
	bn=`basename -- "$cf"`
	exec 5> "$out_dir/$bn$seq_ext"; fd5_is_open=true
	while IFS= read -r line
	do
		unit=${line#"$unit_marker"}
		if test "$unit" != "$line"
		then
			if $fd6_is_open
			then
				fd6_is_open=false; exec 6>& -
			fi
			echo "Extracting unit '$unit'..."
			printf '%s\n' "$unit" >& 5
			n=
			while :
			do
				uf=$out_dir/$unit$snippet_ext
				uf=$uf${n:+"$dup_ext_prefix"}$n
				test ! -e "$uf" && break
				n=`expr ${n:-0} + 1`
			done
			if test "$n"
			then
				echo "Collision! Extracting as duplicate $n."
			fi
			exec 6> "$uf"; fd6_is_open=true
		else
			if $fd6_is_open
			then
				:
			else
				echo "Missing marker at start of combined" \
					"file '$cf'!" >& 2
				false || exit
			fi
			printf '%s\n' "$line" >& 6
		fi
	done < "$cf"
	fd5_is_open=false; exec 5>& -
done

for uf in "$out_dir/"*"$snippet_ext$dup_ext_prefix"*
do
	test ! -e "$uf" && continue
	printf '%s\n%s\n' "$uf" "${uf%"$dup_ext_prefix"[1-9]*}"
done | LC_COLLATE=C sort -u > "$TF"
n=1
while IFS= read -r uf
do
	ck=`
		{
			printf '%s\n' "${uf%"$dup_ext_prefix"[1-9]*}" \
				&& cat -- "$uf"
		} | md5sum -b -- "$uf"
	`
	ck=${ck%" "*}
	printf '%s\n' "$ck:$n:$uf"
	n=`expr $n + 1`
done < "$TF" | LC_COLLATE=C sort -t : -k 1,1 -k 2,2n | {
	lck=
	while IFS=: read -r ck order uf
	do
		if test "$ck" != "$lck"
		then
			lck=$ck
		else
			echo "Removing identical duplicate '$uf'!"
			rm -- "$uf"
		fi
	done
}
